[versions]
kotlin = "2.0.20"

buildKonfig = "0.15.0"
desugar = "2.1.2"
islandTime = "0.7.0"
junit = "4.13.2"
koin = "3.5.3"
ktor = "2.3.12"
molecule = "2.0.0"
playServicesLocation = "21.3.0"
robolectric = "4.11.1"
settings = "1.2.0"
sqlDelight = "2.0.2"
turbine = "1.1.0"

android-gradle = "8.5.2"
android-minSdk = "23"
android-compileSdk = "34"
android-targetSdk = "34"

kotlinx-coroutines = "1.8.1"
kotlinx-dateTime = "0.6.0"
kotlinx-serialization = "1.6.3"

androidx-activityCompose = "1.9.2"
androidx-compose = "1.7.0"
androidx-coreKtx = "1.13.1"
androidx-dataStore = "1.1.1"
androidx-lifecycle = "2.8.5"
androidx-navigation = "2.8.0"
androidx-workManager = "2.9.1"

androidx-test-core = "1.6.1"
androidx-test-junit = "1.2.1"

compose-multiplatform = "1.7.0"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }

desugar = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar" }
islandTime = { module = "io.islandtime:core", version.ref = "islandTime" }
junit = { module = "junit:junit", version.ref = "junit" }
molecule = { module = "app.cash.molecule:molecule-runtime", version.ref = "molecule" }
playServicesLocation = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocation" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-coreKtx = { module = "androidx.core:core-ktx", version.ref = "androidx-coreKtx" }
androidx-dataStore = { module = "androidx.datastore:datastore-preferences", version.ref = "androidx-dataStore" }
androidx-lifecycleRuntime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-navigationCommon = { module = "androidx.navigation:navigation-common", version.ref = "androidx-navigation" }
androidx-navigationCompose = { module = "androidx.navigation:navigation-compose", version.ref = "androidx-navigation" }
androidx-workManager = { module = "androidx.work:work-runtime-ktx", version.ref = "androidx-workManager" }

androidx-compose-material = { module = "androidx.compose.material:material", version.ref = "androidx-compose" }
androidx-compose-materialIcons = { module = "androidx.compose.material:material-icons-core", version.ref = "androidx-compose" }
androidx-compose-materialIconsExtended = { module = "androidx.compose.material:material-icons-extended", version.ref = "androidx-compose" }
androidx-compose-test = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidx-compose" }
androidx-compose-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "androidx-compose" }
androidx-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "androidx-compose" }

androidx-test-core = { module = "androidx.test:core-ktx", version.ref = "androidx-test-core" }
androidx-test-junit = { module = "androidx.test.ext:junit-ktx", version.ref = "androidx-test-junit" }

kotlinx-dateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-dateTime" }

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-playServices = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "kotlinx-coroutines" }

kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-workManager = { module = "io.insert-koin:koin-androidx-workmanager", version.ref = "koin" }

ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }

sqlDelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqlDelight-jvm = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqlDelight-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }

settings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings" }
settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "settings" }
settings-dataStore = { module = "com.russhwolf:multiplatform-settings-datastore", version.ref = "settings" }
settings-test = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "settings" }

[bundles]
androidx-compose = [
    "androidx-activityCompose",
    "androidx-navigationCommon",
    "androidx-navigationCompose",
    "androidx-compose-material",
    "androidx-compose-materialIcons",
    "androidx-compose-materialIconsExtended",
    "androidx-compose-tooling",
    "androidx-compose-ui",
]

kotlinx-serialization-common = [
    "kotlinx-serialization-core",
    "kotlinx-serialization-json",
]

ktor-client-common = [
    "ktor-client-core",
    "ktor-client-json",
    "ktor-client-logging",
    "ktor-client-serialization",
    "ktor-client-contentNegotiation",
]

settings-common = [
    "settings-core",
    "settings-coroutines",
]

[plugins]
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }

android-library = { id = "com.android.library", version.ref = "android-gradle" }
android-application = { id = "com.android.application", version.ref = "android-gradle" }


sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
buildKonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildKonfig" }
