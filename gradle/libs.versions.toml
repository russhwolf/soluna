[versions]
kotlin = "1.5.31"

buildKonfig = "0.10.2"
desugar = "1.1.5"
islandTime = "0.6.2"
junit = "4.13.2"
koin = "3.1.2"
ktor = "1.6.4"
playServicesLocation = "18.0.0"
robolectric = "4.6.1"
settings = "0.8.1"
sqlDelight = "1.5.2"
stately = "1.1.10"
turbine = "0.6.1"

android-gradle = "7.0.3"
android-minSdk = "23"
android-compileSdk = "31"
android-targetSdk = "31"

kotlinx-coroutines = "1.5.2-native-mt"
kotlinx-coroutines-strict = { strictly = "1.5.2-native-mt" }
kotlinx-dateTime = "0.3.0"
kotlinx-serialization = "1.3.0"

androidx-activityCompose = "1.3.1"
androidx-compose = "1.0.4"
androidx-coreKtx = "1.6.0"
androidx-dataStore = "1.0.0"
androidx-lifecycle = "2.4.0-rc01"
androidx-navigationCommon = "2.3.5"
androidx-navigationCompose = "2.4.0-alpha10"
androidx-workManager = "2.7.0"

androidx-test-core = "1.4.0"
androidx-test-junit = "1.1.3"

[libraries]
desugar = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar" }
islandTime = { module = "io.islandtime:core", version.ref = "islandTime" }
junit = { module = "junit:junit", version.ref = "junit" }
playServicesLocation = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocation" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-coreKtx = { module = "androidx.core:core-ktx", version.ref = "androidx-coreKtx" }
androidx-dataStore = { module = "androidx.datastore:datastore-preferences", version.ref = "androidx-dataStore" }
androidx-lifecycleRuntime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-navigationCommon = { module = "androidx.navigation:navigation-common", version.ref = "androidx-navigationCommon" }
androidx-navigationCompose = { module = "androidx.navigation:navigation-compose", version.ref = "androidx-navigationCompose" }
androidx-workManager = { module = "androidx.work:work-runtime-ktx", version.ref = "androidx-workManager" }

androidx-compose-material = { module = "androidx.compose.material:material", version.ref = "androidx-compose" }
androidx-compose-materialIcons = { module = "androidx.compose.material:material-icons-core", version.ref = "androidx-compose" }
androidx-compose-materialIconsExtended = { module = "androidx.compose.material:material-icons-extended", version.ref = "androidx-compose" }
androidx-compose-test = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidx-compose" }
androidx-compose-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "androidx-compose" }
androidx-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "androidx-compose" }

androidx-test-core = { module = "androidx.test:core-ktx", version.ref = "androidx-test-core" }
androidx-test-junit = { module = "androidx.test.ext:junit-ktx", version.ref = "androidx-test-junit" }

kotlinx-dateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-dateTime" }

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-core-strict = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines-strict" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-playServices = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "kotlinx-coroutines" }

kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-workManager = { module = "io.insert-koin:koin-androidx-workmanager", version.ref = "koin" }

ktor-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }

sqlDelight-android = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-coroutines = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqlDelight-jvm = { module = "com.squareup.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqlDelight-native = { module = "com.squareup.sqldelight:native-driver", version.ref = "sqlDelight" }

settings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings" }
settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "settings" }
settings-dataStore = { module = "com.russhwolf:multiplatform-settings-datastore", version.ref = "settings" }
settings-test = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "settings" }

stately-core = { module = "co.touchlab:stately-common", version.ref = "stately" }

[bundles]
androidx-compose = [
    "androidx-activityCompose",
    "androidx-navigationCommon",
    "androidx-navigationCompose",
    "androidx-compose-material",
    "androidx-compose-materialIcons",
    "androidx-compose-materialIconsExtended",
    "androidx-compose-tooling",
    "androidx-compose-ui",
]

kotlinx-serialization-common = [
    "kotlinx-serialization-core",
    "kotlinx-serialization-json",
]

ktor-common = [
    "ktor-core",
    "ktor-json",
    "ktor-logging",
    "ktor-serialization",
]

settings-common = [
    "settings-core",
    "settings-coroutines",
]

[plugins]
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }

android-library = { id = "com.android.library", version.ref = "android-gradle" }
android-application = { id = "com.android.application", version.ref = "android-gradle" }

kotlinx-serialization = { id = "kotlinx-serialization", version.ref = "kotlin" }

sqlDelight = { id = "com.squareup.sqldelight", version.ref = "sqlDelight" }
buildKonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildKonfig" }
